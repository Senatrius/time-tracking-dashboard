{"version":3,"sources":["themes.js","globalStyles.js","components/Container.js","components/ProfileCard.js","components/CategoryCard.js","components/Grid.js","App.js","index.js"],"names":["darkTheme","colors","regularText","inactiveText","secondaryText","pageBackground","cardBackground","profileBackground","cardWork","cardPlay","cardStudy","cardExercise","cardSocial","cardCare","mobileFontSizes","labels","name","values","desktopFontSizes","GlobalStyles","createGlobalStyle","theme","PageContainer","styled","div","Container","props","children","Main","ProfileSection","NavigationSection","ProfilePhoto","img","ProfileInfo","Label","span","Name","h1","ProfileCard","src","alt","category","Icon","ValueSection","h2","CurrentValue","p","PreviousValue","Button","button","ButtonIcon","CategoryCard","getTimeData","timeData","filter","object","title","time","timeQuery","timeframes","current","previous","CardGrid","main","DataToggle","active","toggleButtons","value","Grid","useState","setActive","setTimeQuery","map","idx","onClick","item","forEach","btn","toLowerCase","App","ReactDOM","render","document","getElementById"],"mappings":"ikCAAaA,EAAY,CACvBC,OAAQ,CACNC,YAAa,mBACbC,aAAc,qBACdC,cAAe,sBACfC,eAAgB,qBAChBC,eAAgB,qBAChBC,kBAAmB,qBACnBC,SAAU,qBACVC,SAAU,qBACVC,UAAW,sBACXC,aAAc,qBACdC,WAAY,qBACZC,SAAU,qBAEZC,gBAAiB,CACfV,cAAe,SACfW,OAAQ,SACRC,KAAM,SACNC,OAAQ,UAEVC,iBAAkB,CAChBF,KAAM,SACNC,OAAQ,WCrBCE,EAAeC,YAAH,mKAWR,qBAAGC,MAAkBP,gBAAgBV,iBACpC,qBAAGiB,MAAkBpB,OAAOI,kB,OCXxCiB,EAAgBC,IAAOC,IAAV,8EAAGD,CAAH,2NAwBJE,EARG,SAAAC,GAChB,OACE,cAACJ,EAAD,UACGI,EAAMC,Y,OCnBPC,EAAOL,IAAOC,IAAV,uEAAGD,CAAH,kIAIM,qBAAGF,MAAkBpB,OAAOK,kBAOtCuB,EAAiBN,IAAOC,IAAV,iFAAGD,CAAH,gLAKJ,qBAAGF,MAAkBpB,OAAOM,qBAStCuB,EAAoBP,IAAOC,IAAV,oFAAGD,CAAH,iMAajBQ,EAAeR,IAAOS,IAAV,+EAAGT,CAAH,sMAeZU,EAAcV,IAAOC,IAAV,8EAAGD,CAAH,MAEXW,EAAQX,IAAOY,KAAV,wEAAGZ,CAAH,4GACI,qBAAGF,MAAkBP,gBAAgBV,iBACzC,qBAAGiB,MAAkBpB,OAAOG,iBAQjCgC,EAAOb,IAAOc,GAAV,uEAAGd,CAAH,0HACK,qBAAGF,MAAkBP,gBAAgBE,QAMnC,qBAAGK,MAAkBH,iBAAiBF,QAsBxCsB,EAjBK,SAAAZ,GAClB,OACE,eAACE,EAAD,WACE,eAACC,EAAD,WACE,cAACE,EAAD,CAAcQ,IAAI,0BAA0BC,IAAI,KAChD,eAACP,EAAD,WACE,cAACC,EAAD,yBACA,cAACE,EAAD,kCAGJ,cAACN,EAAD,UACGJ,EAAMC,e,QCvFTC,EAAOL,IAAOC,IAAV,wEAAGD,CAAH,uFAKM,YAAwB,IAAtBkB,EAAqB,EAArBA,SAAUpB,EAAW,EAAXA,MACxB,MAAgB,SAAboB,EACMpB,EAAMpB,OAAOO,SACC,SAAbiC,EACDpB,EAAMpB,OAAOQ,SACC,UAAbgC,EACDpB,EAAMpB,OAAOS,UACC,aAAb+B,EACDpB,EAAMpB,OAAOU,aACC,WAAb8B,EACDpB,EAAMpB,OAAOW,WACC,cAAb6B,EACDpB,EAAMpB,OAAOY,SAEb,WAKP6B,EAAOnB,IAAOS,IAAV,wEAAGT,CAAH,6GAWJoB,EAAepB,IAAOC,IAAV,gFAAGD,CAAH,kXAOF,qBAAGF,MAAkBpB,OAAOK,kBAkBtC4B,EAAQX,IAAOqB,GAAV,yEAAGrB,CAAH,6NAKA,qBAAGF,MAAkBpB,OAAOC,eACxB,qBAAGmB,MAAkBP,gBAAgBC,UAY9C8B,EAAetB,IAAOuB,EAAV,gFAAGvB,CAAH,uMAKP,qBAAGF,MAAkBpB,OAAOC,eACxB,qBAAGmB,MAAkBP,gBAAgBG,UAOnC,qBAAGI,MAAkBH,iBAAiBD,UAIjD8B,EAAgBxB,IAAOuB,EAAV,iFAAGvB,CAAH,iJAKR,qBAAGF,MAAkBpB,OAAOG,iBACxB,qBAAGiB,MAAkBP,gBAAgBV,iBAO9C4C,EAASzB,IAAO0B,OAAV,0EAAG1B,CAAH,8OAiBN2B,EAAa3B,IAAOS,IAAV,8EAAGT,CAAH,6EAkDD4B,EA1CM,SAAAzB,GACnB,IAkBM0B,EAAc,WAKlB,OAJaC,EAASC,QAAO,SAAAC,GAC3B,OAAOA,EAAOC,QAAU9B,EAAMe,YAGlB,IAGhB,OACE,eAAC,EAAD,CAAMA,SAAUf,EAAMe,SAAUgB,KAAM/B,EAAM+B,KAAMC,UAAWhC,EAAMgC,UAAnE,UACE,cAAChB,EAAD,CAAMH,IA3Bc,SAAnBb,EAAMe,SACA,uBACoB,SAAnBf,EAAMe,SACP,uBACoB,UAAnBf,EAAMe,SACP,wBACoB,aAAnBf,EAAMe,SACP,2BACoB,WAAnBf,EAAMe,SACP,yBACoB,cAAnBf,EAAMe,SACP,4BAEA,GAceD,IAAI,KAC1B,eAACG,EAAD,WACE,cAAC,EAAD,UAAQjB,EAAMe,WACd,eAACI,EAAD,WAAeO,IAAcO,WAAWjC,EAAMgC,WAAWE,QAAzD,SACA,eAACb,EAAD,mBAAqBrB,EAAM+B,KAA3B,MAAoCL,IAAcO,WAAWjC,EAAMgC,WAAWG,SAA9E,SACA,cAACb,EAAD,UACE,cAACE,EAAD,CAAYX,IAAI,2BAA2BC,IAAI,cCvKnDsB,EAAWvC,IAAOwC,KAAV,qEAAGxC,CAAH,qUAoBRyC,EAAazC,IAAO0B,OAAV,uEAAG1B,CAAH,4MAKL,gBAAE0C,EAAF,EAAEA,OAAQ5C,EAAV,EAAUA,MAAV,OAAqB4C,EAAS5C,EAAMpB,OAAOC,YAAcmB,EAAMpB,OAAOE,gBAClE,qBAAEkB,MAAiBP,gBAAgBC,UAKrC,qBAAEM,MAAiBpB,OAAOG,iBAQjC8D,EAAgB,CACpB,CAACC,MAAO,MAAOX,MAAO,QAASS,QAAQ,GACvC,CAACE,MAAO,OAAQX,MAAO,SAAUS,QAAQ,GACzC,CAACE,MAAO,QAASX,MAAO,UAAWS,QAAQ,IAkC9BG,EA/BF,WACX,MAA4BC,mBAASH,EAAc,IAAnD,mBAAOD,EAAP,KAAeK,EAAf,KACA,EAAkCD,mBAAS,UAA3C,mBAAOX,EAAP,KAAkBa,EAAlB,KAYA,OACE,eAACT,EAAD,WACE,cAAC,EAAD,UACGI,EAAcM,KAAI,SAACvB,EAAQwB,GAAT,OACjB,cAACT,EAAD,CAAsBG,MAAOlB,EAAOkB,MAAOF,OAAQhB,EAAOgB,OAAQS,QAAS,kBAd/DC,EAciF1B,EAbnGiB,EAAcU,SAAQ,SAAAC,GACpBA,EAAIZ,QAAS,KAEfU,EAAKV,QAAS,EAEdK,EAAUK,QACVJ,EAAaI,EAAKnB,MAAMsB,eAPN,IAAAH,GAcZ,SAAuG1B,EAAOO,OAA7FiB,QAGrB,cAAC,EAAD,CAAchC,SAAS,OAAOgB,KAAMQ,EAAOE,MAAOT,UAAWA,IAC7D,cAAC,EAAD,CAAcjB,SAAS,OAAOgB,KAAMQ,EAAOE,MAAOT,UAAWA,IAC7D,cAAC,EAAD,CAAcjB,SAAS,QAAQgB,KAAMQ,EAAOE,MAAOT,UAAWA,IAC9D,cAAC,EAAD,CAAcjB,SAAS,WAAWgB,KAAMQ,EAAOE,MAAOT,UAAWA,IACjE,cAAC,EAAD,CAAcjB,SAAS,SAASgB,KAAMQ,EAAOE,MAAOT,UAAWA,IAC/D,cAAC,EAAD,CAAcjB,SAAS,YAAYgB,KAAMQ,EAAOE,MAAOT,UAAWA,QCvDzDqB,MAbf,WACE,OACE,eAAC,IAAD,CAAe1D,MAAOrB,EAAtB,UACE,cAACmB,EAAD,IACA,cAAC,EAAD,UACE,cAAC,EAAD,UCTR6D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f65addf4.chunk.js","sourcesContent":["export const darkTheme = {\r\n  colors: {\r\n    regularText: 'hsl(0, 0%, 100%)',\r\n    inactiveText: 'hsl(235, 45%, 61%)',\r\n    secondaryText: 'hsl(236, 100%, 87%)',\r\n    pageBackground: 'hsl(226, 43%, 10%)',\r\n    cardBackground: 'hsl(235, 46%, 20%)',\r\n    profileBackground: 'hsl(246, 80%, 60%)',\r\n    cardWork: 'hsl(15, 100%, 70%)',\r\n    cardPlay: 'hsl(195, 74%, 62%)',\r\n    cardStudy: 'hsl(348, 100%, 68%)',\r\n    cardExercise: 'hsl(145, 58%, 55%)',\r\n    cardSocial: 'hsl(264, 64%, 52%)',\r\n    cardCare: 'hsl(43, 84%, 65%)'\r\n  },\r\n  mobileFontSizes: {\r\n    secondaryText: '1.6rem',\r\n    labels: '1.8rem',\r\n    name: '2.4rem', \r\n    values: '3.2rem'\r\n  },\r\n  desktopFontSizes: {\r\n    name: '3.8rem',\r\n    values: '5.4rem'\r\n  }\r\n}","import {createGlobalStyle} from \"styled-components/macro\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    font-size: ${({ theme }) => theme.mobileFontSizes.secondaryText};\r\n    background: ${({ theme }) => theme.colors.pageBackground};\r\n    font-family: 'Rubik', sans-serif;\r\n    font-weight: 300;\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\n\r\nconst PageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: stretch;\r\n  margin: 0 auto;\r\n  padding: 8rem 0;\r\n  width: 87.5%;\r\n  max-width: 111rem;\r\n  min-height: 100vh;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nconst Container = props => {\r\n  return (\r\n    <PageContainer>\r\n      {props.children}\r\n    </PageContainer>\r\n  )\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport styled from 'styled-components/macro'\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 1.5rem;\r\n  background: ${({ theme }) => theme.colors.cardBackground};\r\n\r\n  @media screen and (min-width: 767px) {\r\n    grid-row: 1 / -1;\r\n  }\r\n`;\r\n\r\nconst ProfileSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 3rem;\r\n  border-radius: 1.5rem;\r\n  background: ${({ theme }) => theme.colors.profileBackground};\r\n\r\n  @media screen and (min-width: 767px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nconst NavigationSection = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 2.5rem 2rem;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    padding: 3rem 3rem .5rem;\r\n  }\r\n`;\r\n\r\nconst ProfilePhoto = styled.img`\r\n  width: 7rem;\r\n  height: 7rem;\r\n  border: .3rem solid white;\r\n  border-radius: 50%;\r\n  margin-right: 1.75rem;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    width: 8.5rem;\r\n    height: 8.5rem;\r\n    margin-right: unset;\r\n    margin-bottom: 4.25rem;\r\n  }\r\n`;\r\n\r\nconst ProfileInfo = styled.div``;\r\n\r\nconst Label = styled.span`\r\n  font-size: ${({ theme }) => theme.mobileFontSizes.secondaryText};\r\n  color: ${({ theme }) => theme.colors.secondaryText};\r\n  margin-bottom: 1rem;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-bottom: 1.25rem;\r\n  }\r\n`;\r\n\r\nconst Name = styled.h1`\r\n  font-size: ${({ theme }) => theme.mobileFontSizes.name};\r\n  font-weight: 300;\r\n  color: white;\r\n  margin: 0;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    font-size: ${({ theme }) => theme.desktopFontSizes.name};\r\n    max-width: 6ch;\r\n  }\r\n`;\r\n\r\nconst ProfileCard = props => {\r\n  return (\r\n    <Main>\r\n      <ProfileSection>\r\n        <ProfilePhoto src=\"images/image-jeremy.png\" alt=\"\" />\r\n        <ProfileInfo>\r\n          <Label>Report for</Label>\r\n          <Name>Jeremy Robson</Name>\r\n        </ProfileInfo>\r\n      </ProfileSection>\r\n      <NavigationSection>\r\n        {props.children}\r\n      </NavigationSection>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;","import React from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport timeData from '../data.json';\r\n\r\nconst Main = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  border-radius: 1.5rem;\r\n  background: ${({category, theme}) => {\r\n    if(category === \"Work\") {\r\n      return theme.colors.cardWork;\r\n    } else if(category === \"Play\") {\r\n      return theme.colors.cardPlay;\r\n    } else if(category === \"Study\") {\r\n      return theme.colors.cardStudy;\r\n    } else if(category === \"Exercise\") {\r\n      return theme.colors.cardExercise;\r\n    } else if(category === \"Social\") {\r\n      return theme.colors.cardSocial;\r\n    } else if(category === \"Self Care\") {\r\n      return theme.colors.cardCare;\r\n    } else {\r\n      return 'white';\r\n    }\r\n  }};\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  position: absolute;\r\n  width: 7.5rem;\r\n  top: -1rem;\r\n  right: 1.75rem;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    width: 8rem;\r\n  }\r\n`;\r\n\r\nconst ValueSection = styled.div`\r\n  display: grid;\r\n  grid-template-areas: 'label button'\r\n                       'curr prev';\r\n  position: relative;\r\n  margin-top: 3.75rem;\r\n  padding: 3.25rem 2.5rem 3.75rem;\r\n  background: ${({ theme }) => theme.colors.cardBackground};\r\n  border-radius: 1.5rem;\r\n  z-index: 2;\r\n  gap: 1rem;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    grid-template-areas: 'label button'\r\n                         'curr .'\r\n                         'prev .';\r\n    gap: unset;\r\n    padding: 3rem 3rem 3.5rem;\r\n  }\r\n\r\n  @media screen and (min-width: 1279px) {\r\n    margin-top: 4.5rem;\r\n  }\r\n`;\r\n\r\nconst Label = styled.h2`\r\n  grid-area: label;\r\n  align-self: center;\r\n  justify-self: start;\r\n  margin: 0;\r\n  color: ${({ theme }) => theme.colors.regularText};\r\n  font-size: ${({ theme }) => theme.mobileFontSizes.labels};\r\n  font-weight: 500;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  @media screen and (min-width: 1279px) {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\n\r\nconst CurrentValue = styled.p`\r\n  grid-area: curr;\r\n  align-self: center;\r\n  justify-self: start;\r\n  margin: 0;\r\n  color: ${({ theme }) => theme.colors.regularText};\r\n  font-size: ${({ theme }) => theme.mobileFontSizes.values};\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  @media screen and (min-width: 1279px) {\r\n    font-size: ${({ theme }) => theme.desktopFontSizes.values};\r\n  }\r\n`;\r\n\r\nconst PreviousValue = styled.p`\r\n  grid-area: prev;\r\n  align-self: center;\r\n  justify-self: end;\r\n  margin: 0;\r\n  color: ${({ theme }) => theme.colors.secondaryText};\r\n  font-size: ${({ theme }) => theme.mobileFontSizes.secondaryText};\r\n\r\n  @media screen and (min-width: 767px) {\r\n    justify-self: start;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  grid-area: button;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: .25rem 0;\r\n  border: none;\r\n  background: transparent;\r\n  align-self: center;\r\n  justify-self: end;\r\n  cursor: pointer;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-bottom: 3.5rem;\r\n  }\r\n`;\r\n\r\nconst ButtonIcon = styled.img`\r\n  transition: .1s ease;\r\n  width: 2rem;\r\n  &:hover, &:focus {\r\n    filter: brightness(100);\r\n  }\r\n`;\r\n\r\nconst CategoryCard = props => {\r\n  const getIcon = () => {\r\n    if(props.category === \"Work\") {\r\n      return 'images/icon-work.svg';\r\n    } else if(props.category === \"Play\") {\r\n      return 'images/icon-play.svg';\r\n    } else if(props.category === \"Study\") {\r\n      return 'images/icon-study.svg';\r\n    } else if(props.category === \"Exercise\") {\r\n      return 'images/icon-exercise.svg';\r\n    } else if(props.category === \"Social\") {\r\n      return 'images/icon-social.svg';\r\n    } else if(props.category === \"Self Care\") {\r\n      return 'images/icon-self-care.svg';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  const getTimeData = () => {\r\n    let result = timeData.filter(object => {\r\n      return object.title === props.category;\r\n    });\r\n\r\n    return result[0];\r\n  }\r\n\r\n  return (\r\n    <Main category={props.category} time={props.time} timeQuery={props.timeQuery}>\r\n      <Icon src={getIcon()} alt=\"\"/>\r\n      <ValueSection>\r\n        <Label>{props.category}</Label>\r\n        <CurrentValue>{getTimeData().timeframes[props.timeQuery].current}hrs</CurrentValue>\r\n        <PreviousValue>Last {props.time} - {getTimeData().timeframes[props.timeQuery].previous}hrs</PreviousValue>\r\n        <Button>\r\n          <ButtonIcon src=\"images/icon-ellipsis.svg\" alt=\"\"/>\r\n        </Button>\r\n      </ValueSection>\r\n    </Main>\r\n  );\r\n}\r\n\r\nexport default CategoryCard;","import React, {useState} from 'react';\r\nimport styled from 'styled-components/macro';\r\nimport ProfileCard from './ProfileCard';\r\nimport CategoryCard from './CategoryCard';\r\n\r\nconst CardGrid = styled.main`\r\n  display: grid;\r\n  width: 100%;\r\n  height: 100%;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: auto;\r\n  gap: 2.4rem;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    gap: 3rem;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: repeat(3, 1fr);\r\n  }\r\n\r\n  @media screen and (min-width: 1279px) {\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-template-rows: repeat(2, 1fr);\r\n  }\r\n`;\r\n\r\nconst DataToggle = styled.button`\r\n  padding: 0;\r\n  margin: 0;\r\n  background: transparent;\r\n  border: none;\r\n  color: ${({active, theme}) => active ? theme.colors.regularText : theme.colors.inactiveText};\r\n  font-size: ${({theme}) => theme.mobileFontSizes.labels};\r\n  cursor: pointer;\r\n  transition: .1s ease;\r\n\r\n  &:hover, &:focus {\r\n    color: ${({theme}) => theme.colors.secondaryText};\r\n  }\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-bottom: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst toggleButtons = [\r\n  {value: \"Day\", title: \"Daily\", active: false},\r\n  {value: \"Week\", title: \"Weekly\", active: true},\r\n  {value: \"Month\", title: \"Monthly\", active: false}\r\n]\r\n\r\nconst Grid = () => {\r\n  const [active, setActive] = useState(toggleButtons[1]);\r\n  const [timeQuery, setTimeQuery] = useState('weekly');\r\n\r\n  const handleClick = item => {\r\n    toggleButtons.forEach(btn => {\r\n      btn.active = false;\r\n    })\r\n    item.active = true;\r\n\r\n    setActive(item);\r\n    setTimeQuery(item.title.toLowerCase());\r\n  }\r\n\r\n  return (\r\n    <CardGrid>\r\n      <ProfileCard>\r\n        {toggleButtons.map((button, idx) => (\r\n          <DataToggle key={idx} value={button.value} active={button.active} onClick={() => handleClick(button)}>{button.title}</DataToggle>\r\n        ))}\r\n      </ProfileCard>\r\n      <CategoryCard category=\"Work\" time={active.value} timeQuery={timeQuery}/>\r\n      <CategoryCard category=\"Play\" time={active.value} timeQuery={timeQuery}/>\r\n      <CategoryCard category=\"Study\" time={active.value} timeQuery={timeQuery}/>\r\n      <CategoryCard category=\"Exercise\" time={active.value} timeQuery={timeQuery}/>\r\n      <CategoryCard category=\"Social\" time={active.value} timeQuery={timeQuery}/>\r\n      <CategoryCard category=\"Self Care\" time={active.value} timeQuery={timeQuery}/>\r\n    </CardGrid>\r\n  );\r\n}\r\n\r\nexport default Grid;","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { darkTheme } from './themes';\nimport { GlobalStyles } from './globalStyles';\n\nimport Container from './components/Container';\nimport Grid from './components/Grid';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <GlobalStyles />\n      <Container>\n        <Grid>\n          \n        </Grid>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}